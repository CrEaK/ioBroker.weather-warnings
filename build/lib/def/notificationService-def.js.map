{
  "version": 3,
  "sources": ["../../../src/lib/def/notificationService-def.ts"],
  "sourcesContent": ["import { MessagesClass } from '../messages';\nimport { ProviderClassType, messageFilterType, providerServices } from './provider-def';\n\nexport type Type = Required<keyof OptionsType>;\n\nexport type OptionsType = {\n    telegram?: {\n        name: 'telegram';\n    } & BaseType;\n    pushover?: {\n        name: 'pushover';\n    } & BaseType;\n    whatsapp?: {\n        name: 'whatsapp';\n    } & BaseType;\n    json?: {\n        name: 'json';\n    } & BaseType;\n    history?: {\n        name: 'history';\n    } & BaseType;\n    email?: {\n        name: 'email';\n    } & BaseType;\n};\nexport type BaseType = {\n    service: providerServices[];\n    filter: messageFilterType;\n    adapter: string;\n    name: Type;\n    actions: ActionsType;\n    useadapter: boolean;\n};\n\nexport type ActionsUnionType = keyof ActionsType;\n\nexport type ActionsType = {\n    new: string;\n    remove: string;\n    removeAll: string;\n    all: string;\n    header?: string;\n    footer?: string;\n};\n\nexport type ConfigType = {\n    notifications: ActionsUnionType[];\n};\n\n/**\n * new: send new messages for new Warnings\n * all: send all messages always (with new, only if a new warning comes up)\n * removeAll: send remove all messages\n * remove: send a remove message for a removed warning\n */\nconst push: ActionsUnionType[] = ['new', 'remove', 'removeAll'];\nconst history: ActionsUnionType[] = ['new', 'remove'];\nconst json: ActionsUnionType[] = ['all', 'removeAll'];\nconst email: ActionsUnionType[] = ['new', 'all', 'removeAll', 'remove'];\n\n//const speak: ActionsUnionType[] = ['new', 'remove', 'removeAll'];\nexport const serciceCapabilities: Record<Type, ConfigType> = {\n    telegram: { notifications: push },\n    email: { notifications: email },\n    json: { notifications: json },\n    whatsapp: { notifications: push },\n    pushover: { notifications: push },\n    history: { notifications: history },\n};\n\nexport const Array: Type[] = ['telegram', 'pushover', 'whatsapp', 'json', 'history', 'email'];\n\nexport type MessageType = {\n    text: string;\n    startts: number;\n    template: string;\n    action?: keyof ActionsType;\n    provider?: ProviderClassType;\n    message?: MessagesClass;\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuDA,MAAM,OAA2B,CAAC,OAAO,UAAU,WAAW;AAC9D,MAAM,UAA8B,CAAC,OAAO,QAAQ;AACpD,MAAM,OAA2B,CAAC,OAAO,WAAW;AACpD,MAAM,QAA4B,CAAC,OAAO,OAAO,aAAa,QAAQ;AAG/D,MAAM,sBAAgD;AAAA,EACzD,UAAU,EAAE,eAAe,KAAK;AAAA,EAChC,OAAO,EAAE,eAAe,MAAM;AAAA,EAC9B,MAAM,EAAE,eAAe,KAAK;AAAA,EAC5B,UAAU,EAAE,eAAe,KAAK;AAAA,EAChC,UAAU,EAAE,eAAe,KAAK;AAAA,EAChC,SAAS,EAAE,eAAe,QAAQ;AACtC;AAEO,MAAM,QAAgB,CAAC,YAAY,YAAY,YAAY,QAAQ,WAAW,OAAO;",
  "names": []
}
